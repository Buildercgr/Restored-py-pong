name: Build and Release Executables

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.x"

      - name: Install dependencies
        run: pip install -r requirements.txt

      # Windows: build .exe
      - name: Build Windows executable
        if: matrix.os == 'windows-latest'
        run: pyinstaller --onefile --windowed py_pong.py

      # macOS: build .app
      - name: Build macOS .app
        if: matrix.os == 'macos-latest'
        run: |
          pyinstaller --windowed py_pong.py
          mv dist/py_pong.app dist/py-pong-macos.app

      - name: Install FUSE
        if: matrix.os == 'ubuntu-latest'
        run: sudo apt-get update && sudo apt-get install -y libfuse2


      # Linux: build .AppImage
      - name: Build Linux AppImage
        if: matrix.os == 'ubuntu-latest'
        run: |
         pyinstaller --onefile py_pong.py
         mkdir -p AppDir/usr/bin
         cp dist/py_pong AppDir/usr/bin/py_pong
         wget https://github.com/AppImage/AppImageKit/releases/download/continuous/appimagetool-x86_64.AppImage -O appimagetool
         chmod +x appimagetool
         ./appimagetool AppDir dist/py-pong-linux.AppImage || true

      # Upload artifacts
      - name: Upload Windows .exe
        if: matrix.os == 'windows-latest'
        uses: actions/upload-artifact@v4
        with:
          name: py-pong-windows
          path: dist/py_pong.exe

      - name: Upload macOS .app
        if: matrix.os == 'macos-latest'
        uses: actions/upload-artifact@v4
        with:
          name: py-pong-macos
          path: dist/py-pong-macos.app

      - name: Upload Linux AppImage
        if: matrix.os == 'ubuntu-latest'
        uses: actions/upload-artifact@v4
        with:
          name: py-pong-linux
          path: dist/py-pong-linux.AppImage

  release:
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Download all build artifacts
        uses: actions/download-artifact@v4
        with:
          merge-multiple: true

      - name: Make files executable (Linux/Mac)
        run: chmod +x py-pong-* || true

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.event.inputs.version || github.ref_name }}
          name: Release ${{ github.event.inputs.version || github.ref_name }}
          draft: false
          prerelease: false
          files: |
            py-pong-linux.AppImage
            py-pong-windows.exe
            py-pong-macos.app

