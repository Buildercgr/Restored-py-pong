name: Build and Release Executables

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.x"

      - name: Install dependencies
        run: pip install -r requirements.txt

      - name: Build executable
        run: pyinstaller --onefile --windowed py_pong.py

      - name: Rename executable
        run: |
          if [[ "$RUNNER_OS" == "Windows" ]]; then
            mv dist/py_pong.exe dist/py-pong-windows.exe
          elif [[ "$RUNNER_OS" == "Linux" ]]; then
            mv dist/py_pong dist/py-pong-linux
          elif [[ "$RUNNER_OS" == "macOS" ]]; then
            mv dist/py_pong dist/py-pong-macos
          fi
        shell: bash

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: py_pong-${{ matrix.os }}
          path: dist/*


  release:
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Download all build artifacts
        uses: actions/download-artifact@v4
        with:
          merge-multiple: true

      - name: Make files executable (Linux/Mac)
        run: chmod +x py-pong-* || true

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.event.inputs.version || github.ref_name }}
          name: Release ${{ github.event.inputs.version || github.ref_name }}
          draft: false
          prerelease: false
          files: |
            py-pong-linux
            py-pong-windows.exe
            py-pong-macos

